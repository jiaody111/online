<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.koala.learn.dao.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.koala.learn.entity.Course" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="type_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="test_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="course_order" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.koala.learn.entity.Course" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="type_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="test_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="course_order" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="content" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, type_id, name, test_id, course_order,content
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.koala.learn.entity.Course" >
    insert into course (id, type_id, name, 
      test_id, course_order, content
      )
    values (#{id,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{testId,jdbcType=INTEGER}, #{courseOrder,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.koala.learn.entity.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="testId != null" >
        test_id,
      </if>
      <if test="courseOrder != null" >
        course_order,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="testId != null" >
        #{testId,jdbcType=INTEGER},
      </if>
      <if test="courseOrder != null" >
        #{courseOrder,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.koala.learn.entity.Course" >
    update course
    <set >
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="testId != null" >
        test_id = #{testId,jdbcType=INTEGER},
      </if>
      <if test="courseOrder != null" >
        course_order = #{courseOrder,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.koala.learn.entity.Course" >
    update course
    set type_id = #{typeId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      test_id = #{testId,jdbcType=INTEGER},
      course_order = #{courseOrder,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.koala.learn.entity.Course" >
    update course
    set type_id = #{typeId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      test_id = #{testId,jdbcType=INTEGER},
      course_order = #{courseOrder,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectCourseByType" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM  course
    WHERE type_id = #{courseType}
    order by course_order
  </select>
</mapper>